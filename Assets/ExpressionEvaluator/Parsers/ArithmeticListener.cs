//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.11.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /Users/butjok/Documents/GitHub/Wars5/Assets/ExpressionEvaluator/Arithmetic.g4 by ANTLR 4.11.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="ArithmeticParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.11.1")]
[System.CLSCompliant(false)]
public interface IArithmeticListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by the <c>baseExpression</c>
	/// labeled alternative in <see cref="ArithmeticParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBaseExpression([NotNull] ArithmeticParser.BaseExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>baseExpression</c>
	/// labeled alternative in <see cref="ArithmeticParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBaseExpression([NotNull] ArithmeticParser.BaseExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>power</c>
	/// labeled alternative in <see cref="ArithmeticParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPower([NotNull] ArithmeticParser.PowerContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>power</c>
	/// labeled alternative in <see cref="ArithmeticParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPower([NotNull] ArithmeticParser.PowerContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>multiplication</c>
	/// labeled alternative in <see cref="ArithmeticParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultiplication([NotNull] ArithmeticParser.MultiplicationContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>multiplication</c>
	/// labeled alternative in <see cref="ArithmeticParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultiplication([NotNull] ArithmeticParser.MultiplicationContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>grouping</c>
	/// labeled alternative in <see cref="ArithmeticParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGrouping([NotNull] ArithmeticParser.GroupingContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>grouping</c>
	/// labeled alternative in <see cref="ArithmeticParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGrouping([NotNull] ArithmeticParser.GroupingContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>summation</c>
	/// labeled alternative in <see cref="ArithmeticParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSummation([NotNull] ArithmeticParser.SummationContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>summation</c>
	/// labeled alternative in <see cref="ArithmeticParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSummation([NotNull] ArithmeticParser.SummationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArithmeticParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAtom([NotNull] ArithmeticParser.AtomContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArithmeticParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAtom([NotNull] ArithmeticParser.AtomContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArithmeticParser.number"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumber([NotNull] ArithmeticParser.NumberContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArithmeticParser.number"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumber([NotNull] ArithmeticParser.NumberContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArithmeticParser.variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariable([NotNull] ArithmeticParser.VariableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArithmeticParser.variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariable([NotNull] ArithmeticParser.VariableContext context);
}
