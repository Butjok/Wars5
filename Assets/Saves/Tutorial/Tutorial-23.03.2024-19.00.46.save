game {
    :turn ( 0 )
    :level-name ( LevelName Tutorial enum )
}
// Blue
player {
    :color-name          ( ColorName Blue enum )
    :team                ( Team None enum )
    :co-name             ( PersonName Natalie enum )
    :ui-position         ( 0 1 int2 )
    :credits             ( 0 )
    :power-meter         ( 0 )
    :unit-look-direction ( 1 0 int2 )
    :side                ( Side Left enum )
    .mark-as-local
    .add
}
// Hq(23, 3) Blue
building {
    :type           ( TileType Hq enum )
    :position       ( 23 3 int2 )
    :cp             ( 20 )
    :look-direction ( 0 1 int2 )
    .add
}
pop
// Factory(23, 0) Blue
building {
    :type           ( TileType Factory enum )
    :position       ( 23 0 int2 )
    :cp             ( 20 )
    :look-direction ( 1 0 int2 )
    .add
}
pop
// City(24, 5) Blue
building {
    :type           ( TileType City enum )
    :position       ( 24 5 int2 )
    :cp             ( 20 )
    :look-direction ( 1 0 int2 )
    .add
}
pop
// Factory(27, 5) Blue
building {
    :type           ( TileType Factory enum )
    :position       ( 27 5 int2 )
    :cp             ( 20 )
    :look-direction ( 1 0 int2 )
    .add
}
pop
// Infantry(28, 4) Blue
unit {
    :type  ( UnitType Infantry enum )
    :moved ( false )
    :hp    ( 10 )
    :position ( 28 4 int2 )
    :look-direction ( 1 0 int2 )
    :view-prefab ( UnitView WbInfantry load-resource )
    .add
    .brain {
    }
}
pop
// LightTank(25, 4) Blue
unit {
    :type  ( UnitType LightTank enum )
    :moved ( false )
    :hp    ( 10 )
    :position ( 25 4 int2 )
    :look-direction ( 1 0 int2 )
    :view-prefab ( UnitView WbLightTank load-resource )
    .add
    .brain {
    }
}
pop
// Infantry(26, 3) Blue
unit {
    :type  ( UnitType Infantry enum )
    :moved ( false )
    :hp    ( 10 )
    :position ( 26 3 int2 )
    :look-direction ( 1 0 int2 )
    :view-prefab ( UnitView WbInfantry load-resource )
    .add
    .brain {
    }
}
pop
// Infantry(25, 1) Blue
unit {
    :type  ( UnitType Infantry enum )
    :moved ( false )
    :hp    ( 10 )
    :position ( 25 1 int2 )
    :look-direction ( 1 0 int2 )
    :view-prefab ( UnitView WbInfantry load-resource )
    .add
    .brain {
    }
}
pop
// Infantry(27, 1) Blue
unit {
    :type  ( UnitType Infantry enum )
    :moved ( false )
    :hp    ( 10 )
    :position ( 27 1 int2 )
    :look-direction ( 1 0 int2 )
    :view-prefab ( UnitView WbInfantry load-resource )
    .add
    .brain {
    }
}
pop
// Rockets(29, 4) Blue
unit {
    :type  ( UnitType Rockets enum )
    :moved ( false )
    :hp    ( 10 )
    :position ( 29 4 int2 )
    :look-direction ( 1 0 int2 )
    :view-prefab ( UnitView WbRockets load-resource )
    .add
    .brain {
    }
}
pop
// Red
player {
    :color-name          ( ColorName Red enum )
    :team                ( Team None enum )
    :co-name             ( PersonName Vladan enum )
    :ui-position         ( 1 1 int2 )
    :credits             ( 0 )
    :power-meter         ( 0 )
    :unit-look-direction ( -1 0 int2 )
    :side                ( Side Right enum )
    .add
}
// Hq(40, -2) Red
building {
    :type           ( TileType Hq enum )
    :position       ( 40 -2 int2 )
    :cp             ( 20 )
    :look-direction ( 0 1 int2 )
    .add
}
pop
// City(40, 3) Red
building {
    :type           ( TileType City enum )
    :position       ( 40 3 int2 )
    :cp             ( 20 )
    :look-direction ( -1 0 int2 )
    .add
}
pop
// City(40, 5) Red
building {
    :type           ( TileType City enum )
    :position       ( 40 5 int2 )
    :cp             ( 20 )
    :look-direction ( -1 0 int2 )
    .add
}
pop
// Recon(39, 0) Red
unit {
    :type  ( UnitType Recon enum )
    :moved ( false )
    :hp    ( 10 )
    :position ( 39 0 int2 )
    :look-direction ( -1 0 int2 )
    :view-prefab ( UnitView WbRecon load-resource )
    .add
    .brain {
    }
}
pop
// LightTank(37, -3) Red
unit {
    :type  ( UnitType LightTank enum )
    :moved ( false )
    :hp    ( 10 )
    :position ( 37 -3 int2 )
    :look-direction ( -1 0 int2 )
    :view-prefab ( UnitView WbLightTank load-resource )
    .add
    .brain {
    }
}
pop
// Apc(38, 1) Red
unit {
    :type  ( UnitType Apc enum )
    :moved ( false )
    :hp    ( 10 )
    :position ( 38 1 int2 )
    :look-direction ( -1 0 int2 )
    :view-prefab ( UnitView WbApc load-resource )
    .add
    .brain {
    }
}
pop
// Infantry(38, -2) Red
unit {
    :type  ( UnitType Infantry enum )
    :moved ( false )
    :hp    ( 10 )
    :position ( 38 -2 int2 )
    :look-direction ( -1 0 int2 )
    :view-prefab ( UnitView WbInfantry load-resource )
    .add
    .brain {
    }
}
pop
// Infantry(40, 1) Red
unit {
    :type  ( UnitType Infantry enum )
    :moved ( false )
    :hp    ( 10 )
    :position ( 40 1 int2 )
    :look-direction ( -1 0 int2 )
    :view-prefab ( UnitView WbInfantry load-resource )
    .add
    .brain {
    }
}
pop
tiles {
    .add ( TileType Plain enum 26 5 int2 29 7 int2 30 4 int2 40 7 int2 25 8 int2 26 8 int2 22 4 int2 22 5 int2 24 2 int2 25 2 int2 22 3 int2 22 2 int2 28 3 int2 32 7 int2 32 4 int2 27 7 int2 32 5 int2 27 3 int2 26 3 int2 28 5 int2 26 2 int2 26 6 int2 25 5 int2 23 5 int2 23 4 int2 25 3 int2 26 7 int2 25 7 int2 24 6 int2 30 5 int2 27 6 int2 25 6 int2 23 2 int2 28 8 int2 29 8 int2 28 6 int2 32 2 int2 35 5 int2 33 4 int2 33 5 int2 34 5 int2 36 5 int2 37 4 int2 40 6 int2 41 7 int2 38 6 int2 37 6 int2 37 5 int2 34 8 int2 33 7 int2 36 6 int2 34 7 int2 33 8 int2 38 8 int2 36 9 int2 38 9 int2 39 9 int2 35 9 int2 34 9 int2 36 8 int2 35 10 int2 34 10 int2 38 10 int2 39 10 int2 39 8 int2 40 8 int2 40 9 int2 37 11 int2 36 12 int2 35 12 int2 34 11 int2 36 11 int2 30 7 int2 28 9 int2 29 9 int2 32 9 int2 33 2 int2 33 0 int2 24 7 int2 27 2 int2 28 2 int2 31 4 int2 31 5 int2 38 4 int2 38 5 int2 38 3 int2 37 3 int2 23 6 int2 37 2 int2 22 0 int2 22 1 int2 27 -4 int2 23 -4 int2 22 -1 int2 28 -4 int2 29 -4 int2 30 -4 int2 31 -4 int2 32 -4 int2 32 -3 int2 33 -2 int2 32 -2 int2 32 0 int2 32 3 int2 31 3 int2 30 3 int2 30 2 int2 26 1 int2 25 1 int2 24 1 int2 23 1 int2 23 -1 int2 23 -2 int2 24 -3 int2 26 -2 int2 26 -1 int2 26 0 int2 25 0 int2 24 -1 int2 24 -2 int2 25 -2 int2 25 -1 int2 23 -3 int2 24 0 int2 27 1 int2 28 -1 int2 27 -2 int2 27 -3 int2 29 -3 int2 30 -2 int2 30 -1 int2 28 0 int2 28 -3 int2 31 -1 int2 27 0 int2 27 -1 int2 28 1 int2 28 -2 int2 29 -1 int2 29 0 int2 29 -2 int2 31 -2 int2 31 2 int2 30 -3 int2 31 -3 int2 36 0 int2 37 0 int2 33 -1 int2 38 2 int2 38 0 int2 37 -1 int2 36 -2 int2 36 -3 int2 32 -1 int2 36 -1 int2 37 -3 int2 38 -2 int2 38 -1 int2 37 -2 int2 38 -3 int2 41 5 int2 41 6 int2 41 4 int2 41 3 int2 41 2 int2 41 1 int2 41 0 int2 41 -1 int2 41 -2 int2 40 -3 int2 39 -3 int2 40 0 int2 40 1 int2 40 2 int2 40 4 int2 40 -1 int2 41 -3 int2 40 -4 int2 39 -4 int2 38 -4 int2 37 -4 int2 36 -4 int2 22 6 int2 24 8 int2 23 7 int2 23 8 int2 24 9 int2 25 9 int2 30 9 int2 30 8 int2 32 8 int2 31 9 int2 28 7 int2 193 )
    .add ( TileType Forest enum 27 8 int2 33 3 int2 25 -4 int2 26 -4 int2 25 -3 int2 26 -3 int2 24 -4 int2 31 0 int2 30 0 int2 26 9 int2 27 9 int2 21 3 int2 21 5 int2 21 4 int2 37 9 int2 37 10 int2 36 10 int2 35 11 int2 33 9 int2 38 11 int2 20 )
    .add ( TileType Road enum 29 3 int2 32 1 int2 33 1 int2 29 2 int2 29 1 int2 31 1 int2 30 1 int2 36 1 int2 37 1 int2 38 1 int2 30 6 int2 26 4 int2 29 4 int2 24 3 int2 28 4 int2 29 5 int2 25 4 int2 29 6 int2 27 4 int2 24 4 int2 32 6 int2 39 5 int2 39 7 int2 39 6 int2 38 7 int2 37 7 int2 36 7 int2 33 6 int2 34 6 int2 35 6 int2 35 7 int2 31 6 int2 39 0 int2 39 -1 int2 39 1 int2 39 2 int2 39 3 int2 39 4 int2 39 -2 int2 31 7 int2 40 )
    .add ( TileType Beach enum 37 12 int2 30 10 int2 36 2 int2 31 10 int2 36 4 int2 34 12 int2 32 10 int2 23 9 int2 21 2 int2 22 -3 int2 22 -2 int2 22 -4 int2 21 6 int2 41 -4 int2 36 3 int2 33 -3 int2 33 10 int2 41 9 int2 41 8 int2 19 )
    .add ( TileType Sea enum 22 12 int2 1 )
}
// Unowned buildings
null
// City(37, 8) 
building {
    :type           ( TileType City enum )
    :position       ( 37 8 int2 )
    :cp             ( 20 )
    :look-direction ( 0 1 int2 )
    .add
}
pop
// City(35, 8) 
building {
    :type           ( TileType City enum )
    :position       ( 35 8 int2 )
    :cp             ( 20 )
    :look-direction ( 0 1 int2 )
    .add
}
pop
// City(31, 8) 
building {
    :type           ( TileType City enum )
    :position       ( 31 8 int2 )
    :cp             ( 20 )
    :look-direction ( 0 1 int2 )
    .add
}
pop
pop
camera-rig {
    :position    ( 34.13263 0.5039396 2.284367 float3 )
    :rotation    ( 0 )
    :pitch-angle ( 55.00001 )
    :dolly-zoom  ( 0.5939999 )
}
