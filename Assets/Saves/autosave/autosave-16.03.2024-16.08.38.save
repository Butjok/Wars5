game {
    :turn ( 0 )
    :level-name ( LevelName Tutorial enum )
}
// Blue
player {
    :color-name          ( ColorName Blue enum )
    :team                ( Team None enum )
    :co-name             ( PersonName Natalie enum )
    :ui-position         ( 0 1 int2 )
    :credits             ( 0 )
    :power-meter         ( 0 )
    :unit-look-direction ( 1 0 int2 )
    :side                ( Side Left enum )
    .mark-as-local
    .add
}
// Hq(23, 3) Blue
building {
    :type           ( TileType Hq enum )
    :position       ( 23 3 int2 )
    :cp             ( 20 )
    :look-direction ( 1 0 int2 )
    .add
}
pop
// Infantry(24, 4) Blue
unit {
    :type  ( UnitType Infantry enum )
    :moved ( false )
    :hp    ( 10 )
    :position ( 24 4 int2 )
    :look-direction ( 1 0 int2 )
    :view-prefab ( UnitView WbInfantry load-resource )
    .add
    .brain {
    }
}
pop
// Infantry(25, 4) Blue
unit {
    :type  ( UnitType Infantry enum )
    :moved ( false )
    :hp    ( 10 )
    :position ( 25 4 int2 )
    :look-direction ( 1 0 int2 )
    :view-prefab ( UnitView WbInfantry load-resource )
    .add
    .brain {
    }
}
pop
// Artillery(25, 5) Blue
unit {
    :type  ( UnitType Artillery enum )
    :moved ( false )
    :hp    ( 10 )
    :position ( 25 5 int2 )
    :look-direction ( 1 0 int2 )
    :view-prefab ( UnitView WbHowitzer load-resource )
    .add
    .brain {
    }
}
pop
// Rockets(25, 3) Blue
unit {
    :type  ( UnitType Rockets enum )
    :moved ( false )
    :hp    ( 10 )
    :position ( 25 3 int2 )
    :look-direction ( 1 0 int2 )
    :view-prefab ( UnitView WbRockets load-resource )
    .add
    .brain {
    }
}
pop
// Red
player {
    :color-name          ( ColorName Red enum )
    :team                ( Team None enum )
    :co-name             ( PersonName Vladan enum )
    :ui-position         ( 1 1 int2 )
    :credits             ( 0 )
    :power-meter         ( 0 )
    :unit-look-direction ( -1 0 int2 )
    :side                ( Side Right enum )
    .add
}
// Hq(31, 7) Red
building {
    :type           ( TileType Hq enum )
    :position       ( 31 7 int2 )
    :cp             ( 20 )
    :look-direction ( -1 0 int2 )
    .add
}
pop
// Infantry(29, 6) Red
unit {
    :type  ( UnitType Infantry enum )
    :moved ( false )
    :hp    ( 10 )
    :position ( 29 6 int2 )
    :look-direction ( -1 0 int2 )
    :view-prefab ( UnitView WbInfantry load-resource )
    .add
    .brain {
    }
}
pop
// Recon(29, 7) Red
unit {
    :type  ( UnitType Recon enum )
    :moved ( false )
    :hp    ( 10 )
    :position ( 29 7 int2 )
    :look-direction ( -1 0 int2 )
    :view-prefab ( UnitView WbRecon load-resource )
    .add
    .brain {
    }
}
pop
tiles {
    .add ( TileType Plain enum 27 3 int2 26 3 int2 28 5 int2 27 5 int2 26 2 int2 26 6 int2 25 5 int2 23 5 int2 23 4 int2 25 3 int2 26 5 int2 28 7 int2 26 7 int2 25 7 int2 24 6 int2 24 5 int2 30 5 int2 31 6 int2 27 6 int2 25 6 int2 29 3 int2 30 4 int2 31 5 int2 23 2 int2 28 8 int2 29 8 int2 28 6 int2 30 6 int2 32 6 int2 29 )
    .add ( TileType Forest enum 24 7 int2 27 2 int2 28 2 int2 28 3 int2 27 7 int2 32 5 int2 6 )
    .add ( TileType Road enum 26 4 int2 29 4 int2 24 3 int2 28 4 int2 29 5 int2 25 4 int2 29 6 int2 27 4 int2 30 7 int2 29 7 int2 24 4 int2 11 )
    .add ( TileType Sea enum 18 12 int2 37 -3 int2 2 )
    .add ( TileType Beach enum 26 8 int2 27 8 int2 28 9 int2 29 9 int2 32 7 int2 30 3 int2 31 4 int2 22 4 int2 22 5 int2 23 6 int2 24 2 int2 25 2 int2 12 )
}
// Unowned buildings
null
pop
camera-rig {
    :position    ( 26.84964 6.675713E-06 4.820126 float3 )
    :rotation    ( 0 )
    :pitch-angle ( 49.59259 )
    :dolly-zoom  ( 0.264 )
}
