game {
    :turn ( 0 )
    :level-name ( LevelName Tutorial enum )
}
// Red
player {
    :color-name          ( ColorName Red enum )
    :team                ( Team None enum )
    :co-name             ( PersonName Vladan enum )
    :ui-position         ( 1 1 int2 )
    :credits             ( 0 )
    :power-meter         ( 0 )
    :unit-look-direction ( -1 0 int2 )
    :side                ( Side Right enum )
    .add
}
// MissileSilo(39, -10) Red
building {
    :type           ( TileType MissileSilo enum )
    :position       ( 39 -10 int2 )
    :cp             ( 20 )
    :look-direction ( -1 0 int2 )
    .missile-silo {
        :last-launch-day ( -99 )
        :launch-cooldown  ( 3 )
        :ammo             ( 999 )
        :range            ( 0 999 int2 )
        :blast-range      ( 0 3 int2 )
        :unit-damage      ( 5 )
        :bridge-damage    ( 10 )
    }
    .add
}
pop
// MissileSilo(39, -8) Red
building {
    :type           ( TileType MissileSilo enum )
    :position       ( 39 -8 int2 )
    :cp             ( 20 )
    :look-direction ( -1 0 int2 )
    .missile-silo {
        :last-launch-day ( -99 )
        :launch-cooldown  ( 3 )
        :ammo             ( 999 )
        :range            ( 0 999 int2 )
        :blast-range      ( 0 3 int2 )
        :unit-damage      ( 5 )
        :bridge-damage    ( 10 )
    }
    .add
}
pop
// Hq(48, 5) Red
building {
    :type           ( TileType Hq enum )
    :position       ( 48 5 int2 )
    :cp             ( 20 )
    :look-direction ( 0 1 int2 )
    .add
}
pop
// Infantry(33, 6) Red
unit {
    :type  ( UnitType Infantry enum )
    :moved ( false )
    :hp    ( 10 )
    :position ( 33 6 int2 )
    :look-direction ( -1 0 int2 )
    :view-prefab ( UnitView WbInfantry load-resource )
    .add
    .brain {
    }
}
pop
// Infantry(40, -8) Red
unit {
    :type  ( UnitType Infantry enum )
    :moved ( false )
    :hp    ( 10 )
    :position ( 40 -8 int2 )
    :look-direction ( -1 0 int2 )
    :view-prefab ( UnitView WbInfantry load-resource )
    .add
    .brain {
    }
}
pop
// Infantry(40, -10) Red
unit {
    :type  ( UnitType Infantry enum )
    :moved ( false )
    :hp    ( 10 )
    :position ( 40 -10 int2 )
    :look-direction ( -1 0 int2 )
    :view-prefab ( UnitView WbInfantry load-resource )
    .add
    .brain {
    }
}
pop
// Rockets(43, 5) Red
unit {
    :type  ( UnitType Rockets enum )
    :moved ( false )
    :hp    ( 10 )
    :position ( 43 5 int2 )
    :look-direction ( -1 0 int2 )
    :view-prefab ( UnitView WbRockets load-resource )
    .add
    .brain {
    }
}
pop
// Rockets(41, 5) Red
unit {
    :type  ( UnitType Rockets enum )
    :moved ( false )
    :hp    ( 10 )
    :position ( 41 5 int2 )
    :look-direction ( -1 0 int2 )
    :view-prefab ( UnitView WbRockets load-resource )
    .add
    .brain {
    }
}
pop
// LightTank(39, 5) Red
unit {
    :type  ( UnitType LightTank enum )
    :moved ( false )
    :hp    ( 10 )
    :position ( 39 5 int2 )
    :look-direction ( -1 0 int2 )
    :view-prefab ( UnitView WbLightTank load-resource )
    .add
    .brain {
    }
}
pop
// MediumTank(41, 7) Red
unit {
    :type  ( UnitType MediumTank enum )
    :moved ( false )
    :hp    ( 10 )
    :position ( 41 7 int2 )
    :look-direction ( -1 0 int2 )
    :view-prefab ( UnitView WbMdTank load-resource )
    .add
    .brain {
    }
}
pop
// MediumTank(43, 6) Red
unit {
    :type  ( UnitType MediumTank enum )
    :moved ( false )
    :hp    ( 10 )
    :position ( 43 6 int2 )
    :look-direction ( -1 0 int2 )
    :view-prefab ( UnitView WbMdTank load-resource )
    .add
    .brain {
    }
}
pop
// MediumTank(45, 4) Red
unit {
    :type  ( UnitType MediumTank enum )
    :moved ( false )
    :hp    ( 10 )
    :position ( 45 4 int2 )
    :look-direction ( -1 0 int2 )
    :view-prefab ( UnitView WbMdTank load-resource )
    .add
    .brain {
    }
}
pop
// LightTank(45, 8) Red
unit {
    :type  ( UnitType LightTank enum )
    :moved ( false )
    :hp    ( 10 )
    :position ( 45 8 int2 )
    :look-direction ( -1 0 int2 )
    :view-prefab ( UnitView WbLightTank load-resource )
    .add
    .brain {
    }
}
pop
// Artillery(46, 10) Red
unit {
    :type  ( UnitType Artillery enum )
    :moved ( false )
    :hp    ( 10 )
    :position ( 46 10 int2 )
    :look-direction ( -1 0 int2 )
    :view-prefab ( UnitView WbHowitzer load-resource )
    .add
    .brain {
    }
}
pop
// Artillery(46, 3) Red
unit {
    :type  ( UnitType Artillery enum )
    :moved ( false )
    :hp    ( 10 )
    :position ( 46 3 int2 )
    :look-direction ( -1 0 int2 )
    :view-prefab ( UnitView WbHowitzer load-resource )
    .add
    .brain {
    }
}
pop
// Apc(46, 1) Red
unit {
    :type  ( UnitType Apc enum )
    :moved ( false )
    :hp    ( 10 )
    :position ( 46 1 int2 )
    :look-direction ( -1 0 int2 )
    :view-prefab ( UnitView WbApc load-resource )
    .add
    .brain {
    }
}
pop
// Apc(47, -1) Red
unit {
    :type  ( UnitType Apc enum )
    :moved ( false )
    :hp    ( 10 )
    :position ( 47 -1 int2 )
    :look-direction ( -1 0 int2 )
    :view-prefab ( UnitView WbApc load-resource )
    .add
    .brain {
    }
}
pop
// Blue
player {
    :color-name          ( ColorName Blue enum )
    :team                ( Team None enum )
    :co-name             ( PersonName Natalie enum )
    :ui-position         ( 0 1 int2 )
    :credits             ( 0 )
    :power-meter         ( 0 )
    :unit-look-direction ( 1 0 int2 )
    :side                ( Side Left enum )
    .mark-as-local
    .add
}
// Hq(-7, -10) Blue
building {
    :type           ( TileType Hq enum )
    :position       ( -7 -10 int2 )
    :cp             ( 20 )
    :look-direction ( 0 1 int2 )
    .add
}
pop
// City(19, 6) Blue
building {
    :type           ( TileType City enum )
    :position       ( 19 6 int2 )
    :cp             ( 20 )
    :look-direction ( 1 0 int2 )
    .add
}
pop
// City(16, 6) Blue
building {
    :type           ( TileType City enum )
    :position       ( 16 6 int2 )
    :cp             ( 20 )
    :look-direction ( 1 0 int2 )
    .add
}
pop
// City(15, -2) Blue
building {
    :type           ( TileType City enum )
    :position       ( 15 -2 int2 )
    :cp             ( 20 )
    :look-direction ( 1 0 int2 )
    .add
}
pop
// Infantry(29, 4) Blue
unit {
    :type  ( UnitType Infantry enum )
    :moved ( false )
    :hp    ( 10 )
    :position ( 29 4 int2 )
    :look-direction ( 1 0 int2 )
    :view-prefab ( UnitView WbInfantry load-resource )
    .add
    .brain {
    }
}
pop
// LightTank(2, 0) Blue
unit {
    :type  ( UnitType LightTank enum )
    :moved ( false )
    :hp    ( 10 )
    :position ( 2 0 int2 )
    :look-direction ( 1 0 int2 )
    :view-prefab ( UnitView WbLightTank load-resource )
    .add
    .brain {
    }
}
pop
// Recon(2, -2) Blue
unit {
    :type  ( UnitType Recon enum )
    :moved ( false )
    :hp    ( 10 )
    :position ( 2 -2 int2 )
    :look-direction ( 1 0 int2 )
    :view-prefab ( UnitView WbRecon load-resource )
    .add
    .brain {
    }
}
pop
// Infantry(4, -2) Blue
unit {
    :type  ( UnitType Infantry enum )
    :moved ( false )
    :hp    ( 10 )
    :position ( 4 -2 int2 )
    :look-direction ( 1 0 int2 )
    :view-prefab ( UnitView WbInfantry load-resource )
    .add
    .brain {
    }
}
pop
// MediumTank(2, -4) Blue
unit {
    :type  ( UnitType MediumTank enum )
    :moved ( false )
    :hp    ( 10 )
    :position ( 2 -4 int2 )
    :look-direction ( 1 0 int2 )
    :view-prefab ( UnitView WbMdTank load-resource )
    .add
    .brain {
    }
}
pop
// Infantry(4, -6) Blue
unit {
    :type  ( UnitType Infantry enum )
    :moved ( false )
    :hp    ( 10 )
    :position ( 4 -6 int2 )
    :look-direction ( 1 0 int2 )
    :view-prefab ( UnitView WbInfantry load-resource )
    .add
    .brain {
    }
}
pop
// Recon(30, 3) Blue
unit {
    :type  ( UnitType Recon enum )
    :moved ( false )
    :hp    ( 10 )
    :position ( 30 3 int2 )
    :look-direction ( 1 0 int2 )
    :view-prefab ( UnitView WbRecon load-resource )
    .add
    .brain {
    }
}
pop
// LightTank(6, 0) Blue
unit {
    :type  ( UnitType LightTank enum )
    :moved ( false )
    :hp    ( 10 )
    :position ( 6 0 int2 )
    :look-direction ( 1 0 int2 )
    :view-prefab ( UnitView WbLightTank load-resource )
    .add
    .brain {
    }
}
pop
// Infantry(0, -5) Blue
unit {
    :type  ( UnitType Infantry enum )
    :moved ( false )
    :hp    ( 10 )
    :position ( 0 -5 int2 )
    :look-direction ( 1 0 int2 )
    :view-prefab ( UnitView WbInfantry load-resource )
    .add
    .brain {
    }
}
pop
tiles {
    .add ( TileType Plain enum 0 7 int2 1 7 int2 14 8 int2 14 7 int2 16 7 int2 14 9 int2 15 7 int2 5 3 int2 1 3 int2 2 3 int2 3 3 int2 28 10 int2 28 9 int2 24 11 int2 27 11 int2 28 11 int2 15 -5 int2 20 7 int2 19 7 int2 17 7 int2 18 7 int2 4 -2 int2 42 17 int2 42 16 int2 42 11 int2 42 12 int2 18 2 int2 18 3 int2 18 4 int2 18 6 int2 12 8 int2 15 8 int2 42 10 int2 41 11 int2 8 4 int2 14 6 int2 14 5 int2 11 5 int2 15 6 int2 22 6 int2 20 6 int2 13 1 int2 13 2 int2 14 2 int2 16 2 int2 17 2 int2 13 9 int2 13 -1 int2 13 -2 int2 37 6 int2 39 6 int2 40 6 int2 38 6 int2 24 6 int2 25 6 int2 23 6 int2 32 6 int2 35 6 int2 36 6 int2 26 6 int2 27 6 int2 28 6 int2 41 6 int2 42 6 int2 30 6 int2 29 6 int2 33 6 int2 31 6 int2 34 6 int2 -3 -11 int2 40 -9 int2 41 -9 int2 4 -6 int2 -1 -11 int2 19 -7 int2 9 -6 int2 10 -6 int2 6 3 int2 4 3 int2 8 -4 int2 12 -7 int2 6 -11 int2 4 -11 int2 5 -11 int2 3 -11 int2 -3 -5 int2 41 -6 int2 42 -5 int2 1 -4 int2 13 -7 int2 11 -6 int2 18 -7 int2 9 -5 int2 -2 -5 int2 40 -8 int2 39 -9 int2 38 -10 int2 42 -4 int2 41 -5 int2 38 -8 int2 37 -9 int2 34 -10 int2 32 -10 int2 31 -11 int2 26 -7 int2 27 -5 int2 28 -8 int2 35 -10 int2 34 -11 int2 33 -11 int2 32 -11 int2 27 -9 int2 26 -9 int2 26 -8 int2 28 -9 int2 29 -9 int2 40 -1 int2 38 -3 int2 39 -2 int2 39 -1 int2 36 -4 int2 34 -5 int2 34 -6 int2 33 -6 int2 32 -4 int2 32 -3 int2 34 -4 int2 37 -3 int2 39 -3 int2 38 -4 int2 36 -5 int2 35 -5 int2 37 -4 int2 39 -4 int2 41 -4 int2 40 -4 int2 38 -5 int2 35 -6 int2 32 -6 int2 38 -2 int2 36 -3 int2 35 -4 int2 33 -5 int2 29 -5 int2 28 -5 int2 35 7 int2 36 7 int2 34 8 int2 35 8 int2 35 4 int2 35 3 int2 37 7 int2 36 3 int2 33 -1 int2 32 1 int2 32 -1 int2 34 0 int2 38 1 int2 40 0 int2 39 0 int2 38 0 int2 34 -1 int2 33 -2 int2 32 -2 int2 31 -3 int2 30 -3 int2 30 -4 int2 29 -4 int2 29 -1 int2 29 -2 int2 28 -2 int2 27 -2 int2 27 -1 int2 28 -1 int2 28 -3 int2 27 -3 int2 26 -1 int2 26 -2 int2 25 -1 int2 26 0 int2 27 0 int2 25 0 int2 23 -1 int2 24 0 int2 24 -3 int2 24 -2 int2 22 -1 int2 22 0 int2 24 -1 int2 25 -2 int2 26 -3 int2 25 -3 int2 23 -3 int2 22 -3 int2 23 0 int2 23 -2 int2 22 -2 int2 23 1 int2 26 3 int2 27 1 int2 28 1 int2 28 0 int2 30 -1 int2 31 -2 int2 30 -2 int2 29 -3 int2 28 -4 int2 27 -4 int2 26 -4 int2 20 -3 int2 20 -2 int2 22 1 int2 24 1 int2 26 1 int2 26 2 int2 24 4 int2 24 3 int2 24 7 int2 22 3 int2 22 7 int2 23 7 int2 22 4 int2 24 8 int2 25 7 int2 25 4 int2 23 2 int2 23 3 int2 23 4 int2 23 8 int2 22 8 int2 20 4 int2 20 9 int2 20 8 int2 19 4 int2 22 2 int2 25 3 int2 31 8 int2 32 8 int2 31 9 int2 29 9 int2 32 9 int2 33 9 int2 33 8 int2 29 10 int2 27 10 int2 26 7 int2 25 8 int2 26 10 int2 27 9 int2 26 8 int2 26 9 int2 24 10 int2 22 10 int2 21 10 int2 19 11 int2 19 10 int2 20 10 int2 26 11 int2 32 -9 int2 31 -1 int2 -3 -6 int2 29 -8 int2 17 -8 int2 12 -10 int2 34 7 int2 27 8 int2 42 4 int2 33 2 int2 32 2 int2 31 10 int2 8 -10 int2 7 -5 int2 41 -2 int2 40 -5 int2 20 -10 int2 15 -7 int2 7 -6 int2 12 -9 int2 12 -8 int2 7 -8 int2 40 9 int2 41 8 int2 40 3 int2 31 7 int2 32 7 int2 33 7 int2 42 8 int2 28 8 int2 29 8 int2 40 2 int2 42 7 int2 37 12 int2 27 4 int2 26 4 int2 27 7 int2 27 3 int2 27 2 int2 33 -7 int2 34 -7 int2 42 3 int2 41 -3 int2 41 0 int2 20 -9 int2 20 -11 int2 7 -7 int2 7 -4 int2 42 -3 int2 8 -2 int2 24 -6 int2 26 -6 int2 14 -10 int2 13 -10 int2 28 -6 int2 7 -10 int2 19 -11 int2 28 -7 int2 8 -9 int2 23 -5 int2 26 -5 int2 19 -9 int2 11 -8 int2 18 -10 int2 14 -9 int2 9 -4 int2 7 -9 int2 9 -11 int2 14 -6 int2 16 -7 int2 40 13 int2 39 12 int2 38 12 int2 32 10 int2 40 8 int2 -4 -8 int2 30 2 int2 30 4 int2 30 0 int2 30 1 int2 39 9 int2 41 7 int2 41 4 int2 29 4 int2 28 4 int2 28 3 int2 28 2 int2 29 2 int2 32 4 int2 31 4 int2 29 7 int2 28 7 int2 39 8 int2 29 1 int2 29 0 int2 33 10 int2 34 4 int2 41 3 int2 37 -6 int2 38 -6 int2 39 -5 int2 38 -9 int2 33 -8 int2 32 -7 int2 34 -8 int2 5 -5 int2 -2 -9 int2 16 -8 int2 18 -11 int2 -3 -8 int2 41 1 int2 34 -9 int2 36 -7 int2 36 -6 int2 41 -1 int2 41 2 int2 40 -2 int2 42 2 int2 42 -2 int2 3 -4 int2 35 -7 int2 42 0 int2 18 -8 int2 35 -9 int2 42 -1 int2 16 -9 int2 15 -10 int2 14 -11 int2 22 -11 int2 24 -5 int2 21 -11 int2 9 -10 int2 10 -10 int2 5 -4 int2 9 -9 int2 15 -8 int2 21 -10 int2 19 -10 int2 12 -11 int2 13 -11 int2 7 -11 int2 23 -6 int2 23 -7 int2 11 -11 int2 27 -8 int2 8 -1 int2 27 -6 int2 8 -5 int2 33 -9 int2 31 -8 int2 32 -8 int2 30 3 int2 33 3 int2 31 3 int2 32 3 int2 33 4 int2 38 8 int2 40 7 int2 31 1 int2 31 0 int2 31 2 int2 33 -10 int2 15 -11 int2 4 -4 int2 37 -5 int2 42 1 int2 40 -3 int2 6 -5 int2 11 -10 int2 10 -11 int2 16 -10 int2 41 13 int2 27 -7 int2 30 -8 int2 29 3 int2 41 9 int2 41 10 int2 20 -6 int2 20 -8 int2 11 -7 int2 17 -6 int2 10 -8 int2 5 -9 int2 7 -1 int2 -3 -9 int2 7 -2 int2 42 9 int2 10 -7 int2 19 -6 int2 -4 -3 int2 -2 -11 int2 30 -11 int2 28 -11 int2 27 -11 int2 26 -10 int2 24 -10 int2 23 -10 int2 22 -10 int2 21 -9 int2 21 -8 int2 21 -6 int2 22 -7 int2 22 -9 int2 9 -8 int2 0 -9 int2 18 -6 int2 16 -6 int2 17 -10 int2 13 -8 int2 9 -7 int2 21 -7 int2 22 -6 int2 22 -8 int2 23 -11 int2 24 -9 int2 24 -8 int2 23 -8 int2 23 -9 int2 24 -11 int2 26 -11 int2 27 -10 int2 28 -10 int2 25 -11 int2 24 -7 int2 0 -7 int2 1 -7 int2 6 -7 int2 6 -8 int2 -1 -8 int2 -2 -8 int2 1 -8 int2 6 -9 int2 -4 -5 int2 -4 -6 int2 -1 -7 int2 3 -7 int2 5 -8 int2 3 -8 int2 5 -7 int2 4 -9 int2 -4 -7 int2 -2 -7 int2 -3 -7 int2 39 -11 int2 40 -10 int2 38 -11 int2 40 -11 int2 41 -10 int2 42 -10 int2 4 -8 int2 3 -10 int2 4 -7 int2 5 -10 int2 -4 0 int2 1 -11 int2 -4 -1 int2 0 -11 int2 -4 -2 int2 8 -6 int2 14 -7 int2 10 -5 int2 2 -11 int2 6 -10 int2 19 8 int2 12 5 int2 18 8 int2 17 8 int2 13 6 int2 11 4 int2 10 4 int2 10 3 int2 8 3 int2 7 3 int2 7 2 int2 8 1 int2 16 0 int2 17 1 int2 9 3 int2 8 2 int2 9 2 int2 11 2 int2 12 2 int2 12 1 int2 11 1 int2 12 3 int2 9 1 int2 11 3 int2 12 4 int2 13 4 int2 13 5 int2 17 6 int2 16 4 int2 16 1 int2 17 3 int2 16 3 int2 17 4 int2 18 1 int2 14 1 int2 16 -1 int2 12 -1 int2 11 -1 int2 10 -1 int2 10 -2 int2 9 -1 int2 9 -2 int2 10 -4 int2 11 -4 int2 13 -4 int2 14 -4 int2 17 -5 int2 18 -5 int2 18 -1 int2 18 0 int2 11 -2 int2 12 -4 int2 12 -2 int2 14 -2 int2 14 -1 int2 16 -4 int2 16 -5 int2 14 -5 int2 16 -2 int2 17 -1 int2 17 -4 int2 16 -3 int2 17 -2 int2 19 -2 int2 17 0 int2 15 -6 int2 17 -11 int2 11 -9 int2 4 -10 int2 8 -7 int2 10 -9 int2 19 -8 int2 30 10 int2 30 9 int2 30 8 int2 30 7 int2 34 3 int2 36 -2 int2 35 -3 int2 34 -2 int2 34 -3 int2 33 -3 int2 35 -2 int2 37 -2 int2 33 1 int2 35 -1 int2 7 1 int2 0 -8 int2 41 -11 int2 3 -9 int2 14 -8 int2 16 -11 int2 13 -9 int2 5 -6 int2 15 -9 int2 8 -11 int2 -1 -9 int2 1 -9 int2 -4 -11 int2 -4 -4 int2 19 -5 int2 -4 -9 int2 17 20 int2 18 18 int2 18 19 int2 16 18 int2 16 17 int2 26 21 int2 27 21 int2 26 22 int2 25 22 int2 25 21 int2 6 -6 int2 6 -4 int2 4 -5 int2 -3 2 int2 -3 1 int2 -3 0 int2 -3 -2 int2 -3 -4 int2 -2 -4 int2 -1 -5 int2 -2 -6 int2 -1 -6 int2 1 -6 int2 3 -5 int2 1 -5 int2 0 -5 int2 3 -6 int2 0 -6 int2 0 -4 int2 -1 -3 int2 -2 -3 int2 -3 -1 int2 -2 0 int2 -2 2 int2 -1 2 int2 -1 1 int2 3 2 int2 5 2 int2 6 2 int2 6 1 int2 -2 1 int2 -2 -1 int2 -2 -2 int2 0 -1 int2 -1 0 int2 -1 -2 int2 -1 -4 int2 0 -3 int2 0 -2 int2 1 -3 int2 1 -2 int2 -1 -1 int2 1 0 int2 1 1 int2 2 1 int2 0 1 int2 4 2 int2 4 1 int2 1 -1 int2 3 1 int2 3 -2 int2 5 -1 int2 3 -1 int2 5 -2 int2 5 1 int2 -6 3 int2 -7 3 int2 -8 3 int2 -9 3 int2 -9 2 int2 -9 1 int2 -9 0 int2 -9 -2 int2 -9 -3 int2 -9 -5 int2 -9 -7 int2 -9 -8 int2 -9 -9 int2 -9 -11 int2 -8 -11 int2 -7 -11 int2 -6 -11 int2 -5 -11 int2 -9 -6 int2 -9 -4 int2 -9 -1 int2 -8 1 int2 -7 2 int2 -7 1 int2 -8 -3 int2 -8 -6 int2 -8 -8 int2 -8 -9 int2 -6 -9 int2 -5 -9 int2 -5 -8 int2 -5 -5 int2 -5 -2 int2 -6 0 int2 -5 2 int2 -6 2 int2 -8 2 int2 -8 -4 int2 -8 -7 int2 -7 -9 int2 -6 -8 int2 -7 -7 int2 -7 -8 int2 -6 -7 int2 -6 -5 int2 -8 -5 int2 -7 -6 int2 -5 -6 int2 -6 -6 int2 -7 -4 int2 -5 -7 int2 -7 -5 int2 -8 -2 int2 -7 -2 int2 -6 -3 int2 -5 -1 int2 -6 -2 int2 -6 -4 int2 -5 -3 int2 -6 -1 int2 -5 -4 int2 -3 18 int2 -4 16 int2 -4 15 int2 -4 14 int2 -3 15 int2 -2 16 int2 -3 17 int2 -2 17 int2 -5 16 int2 7 13 int2 8 13 int2 9 13 int2 19 17 int2 25 20 int2 13 15 int2 14 15 int2 15 16 int2 16 16 int2 12 15 int2 9 14 int2 11 15 int2 14 16 int2 15 17 int2 17 17 int2 18 17 int2 19 18 int2 20 19 int2 23 20 int2 24 20 int2 21 19 int2 8 14 int2 13 16 int2 12 16 int2 10 15 int2 9 15 int2 22 19 int2 30 21 int2 29 21 int2 28 22 int2 28 21 int2 23 19 int2 0 0 int2 27 23 int2 32 24 int2 32 23 int2 34 24 int2 33 25 int2 34 25 int2 37 25 int2 36 25 int2 35 25 int2 43 5 int2 44 5 int2 45 5 int2 46 5 int2 47 5 int2 6 -1 int2 4 -1 int2 43 10 int2 44 9 int2 45 10 int2 47 10 int2 47 9 int2 46 10 int2 44 10 int2 43 9 int2 43 7 int2 43 6 int2 45 7 int2 44 8 int2 44 7 int2 45 6 int2 43 8 int2 44 6 int2 46 6 int2 47 6 int2 47 7 int2 47 8 int2 46 9 int2 45 9 int2 46 7 int2 46 8 int2 45 8 int2 47 4 int2 47 3 int2 47 2 int2 47 1 int2 47 0 int2 47 -1 int2 46 -1 int2 45 -1 int2 44 -1 int2 43 -1 int2 43 0 int2 43 1 int2 43 3 int2 43 4 int2 44 4 int2 44 2 int2 44 0 int2 45 1 int2 46 3 int2 45 4 int2 44 3 int2 43 2 int2 44 1 int2 45 2 int2 45 3 int2 46 4 int2 46 2 int2 45 0 int2 46 0 int2 46 1 int2 8 -3 int2 9 -3 int2 10 -3 int2 11 -3 int2 13 -3 int2 12 -3 int2 7 -3 int2 5 -3 int2 4 -3 int2 3 -3 int2 6 -3 int2 14 -3 int2 15 -3 int2 15 -4 int2 -1 8 int2 0 6 int2 0 8 int2 2 8 int2 2 9 int2 1 9 int2 1 10 int2 883 )
    .add ( TileType Forest enum 1 8 int2 -1 7 int2 42 15 int2 42 13 int2 42 14 int2 11 7 int2 11 6 int2 12 7 int2 -4 2 int2 -4 1 int2 30 -10 int2 29 -7 int2 31 -10 int2 29 -10 int2 31 -4 int2 33 -4 int2 32 -5 int2 30 -5 int2 19 2 int2 20 2 int2 19 12 int2 20 12 int2 20 11 int2 31 -5 int2 31 -9 int2 38 2 int2 39 3 int2 39 2 int2 30 -9 int2 17 -9 int2 17 -7 int2 30 -7 int2 31 -7 int2 29 -6 int2 30 -6 int2 34 10 int2 35 10 int2 31 -6 int2 29 -11 int2 12 6 int2 9 4 int2 19 3 int2 17 9 int2 19 0 int2 19 -4 int2 18 -4 int2 17 -3 int2 18 -2 int2 19 1 int2 38 -1 int2 37 -1 int2 35 2 int2 36 4 int2 36 2 int2 36 1 int2 36 0 int2 35 0 int2 32 0 int2 34 1 int2 33 0 int2 35 1 int2 37 1 int2 37 0 int2 36 -1 int2 37 2 int2 39 1 int2 40 1 int2 34 2 int2 37 4 int2 37 3 int2 40 11 int2 40 10 int2 38 11 int2 39 4 int2 38 3 int2 40 4 int2 38 4 int2 38 7 int2 39 7 int2 37 8 int2 36 8 int2 23 10 int2 17 18 int2 17 19 int2 16 19 int2 26 23 int2 27 22 int2 -3 -3 int2 2 2 int2 10 5 int2 -8 -1 int2 -8 0 int2 -7 -1 int2 -7 0 int2 -7 -3 int2 -5 0 int2 -5 1 int2 -6 1 int2 -4 17 int2 -3 16 int2 -4 18 int2 -5 17 int2 -5 15 int2 29 22 int2 28 23 int2 29 23 int2 29 24 int2 30 23 int2 30 22 int2 30 24 int2 31 25 int2 31 24 int2 31 23 int2 32 25 int2 33 24 int2 15 9 int2 13 8 int2 42 -9 int2 42 -8 int2 42 -7 int2 42 -6 int2 41 -7 int2 40 -7 int2 41 -8 int2 37 -11 int2 39 -7 int2 37 -8 int2 40 -6 int2 39 -6 int2 38 -7 int2 36 -10 int2 37 -10 int2 36 -11 int2 35 -11 int2 35 9 int2 25 1 int2 25 2 int2 24 2 int2 37 9 int2 36 9 int2 35 -8 int2 36 11 int2 35 11 int2 39 11 int2 39 10 int2 36 -8 int2 36 -9 int2 38 10 int2 38 9 int2 37 11 int2 36 10 int2 37 10 int2 37 -7 int2 16 9 int2 16 8 int2 13 7 int2 19 9 int2 18 9 int2 13 3 int2 14 4 int2 14 3 int2 42 -11 int2 6 -2 int2 13 -6 int2 12 -6 int2 20 -1 int2 20 0 int2 10 1 int2 10 2 int2 19 -3 int2 19 -1 int2 12 -5 int2 11 -5 int2 13 -5 int2 8 -8 int2 34 9 int2 36 12 int2 40 12 int2 34 11 int2 35 12 int2 1 2 int2 0 2 int2 21 -5 int2 0 9 int2 -1 9 int2 0 10 int2 186 )
    .add ( TileType River enum 21 6 int2 25 -7 int2 25 -5 int2 25 -10 int2 25 -8 int2 25 -9 int2 25 -4 int2 21 -3 int2 21 -2 int2 21 -1 int2 21 0 int2 24 -4 int2 23 -4 int2 22 -4 int2 21 -4 int2 21 1 int2 21 4 int2 21 3 int2 21 2 int2 23 9 int2 22 9 int2 25 11 int2 21 8 int2 21 9 int2 25 10 int2 25 9 int2 24 9 int2 27 )
    .add ( TileType Bridge enum 25 -6 int2 21 7 int2 21 5 int2 3 )
    .add ( TileType Beach enum 12 9 int2 11 8 int2 39 25 int2 38 25 int2 30 25 int2 25 23 int2 28 24 int2 23 21 int2 20 20 int2 15 18 int2 18 20 int2 31 22 int2 7 4 int2 6 4 int2 5 4 int2 1 6 int2 8 5 int2 -6 4 int2 -7 4 int2 -8 4 int2 -9 4 int2 -3 14 int2 -2 15 int2 6 13 int2 19 19 int2 21 20 int2 22 20 int2 24 21 int2 13 17 int2 14 17 int2 11 16 int2 2 10 int2 7 14 int2 8 15 int2 20 18 int2 -8 11 int2 -9 11 int2 32 22 int2 33 23 int2 -1 3 int2 9 5 int2 -4 3 int2 0 3 int2 22 11 int2 21 11 int2 29 11 int2 23 11 int2 31 11 int2 -3 3 int2 33 12 int2 18 10 int2 33 11 int2 18 11 int2 32 11 int2 34 12 int2 -2 3 int2 30 11 int2 -5 3 int2 -5 4 int2 -4 4 int2 10 8 int2 9 8 int2 10 7 int2 10 6 int2 64 )
    .add ( TileType Road enum 13 0 int2 8 0 int2 12 0 int2 14 0 int2 7 0 int2 2 -1 int2 4 0 int2 2 0 int2 3 0 int2 2 -2 int2 6 0 int2 5 0 int2 9 0 int2 10 0 int2 11 0 int2 18 5 int2 20 5 int2 19 5 int2 16 5 int2 15 5 int2 17 5 int2 15 0 int2 36 5 int2 41 5 int2 15 2 int2 2 -3 int2 37 5 int2 39 5 int2 38 5 int2 40 5 int2 0 -10 int2 1 -10 int2 -2 -10 int2 35 5 int2 25 5 int2 24 5 int2 22 5 int2 23 5 int2 27 5 int2 26 5 int2 42 5 int2 28 5 int2 29 5 int2 31 5 int2 34 5 int2 33 5 int2 32 5 int2 2 -10 int2 -1 -10 int2 2 -8 int2 15 4 int2 15 1 int2 15 3 int2 15 -1 int2 -3 -10 int2 2 -9 int2 30 5 int2 2 -7 int2 -4 -10 int2 2 -6 int2 2 -4 int2 2 -5 int2 -9 -10 int2 -8 -10 int2 -5 -10 int2 -6 -10 int2 66 )
    .add ( TileType Mountain enum 20 -4 int2 20 1 int2 20 3 int2 18 -9 int2 22 -5 int2 20 -5 int2 20 -7 int2 18 -3 int2 8 )
    .add ( TileType Sea enum 19 23 int2 -1 26 int2 -1 27 int2 -1 28 int2 0 28 int2 5 )
}
// Unowned buildings
null
pop
camera-rig {
    :position    ( 22.60917 -1.144409E-05 -0.361295 float3 )
    :rotation    ( 0 )
    :pitch-angle ( 52.37567 )
    :dolly-zoom  ( 0.85 )
}
path {
    :name ( CameraIntro )
    .add-position ( -3 -1 int2 )
    .add-position ( 4 0 int2 )
    .add-position ( 11 1 int2 )
    .add-position ( 15 2 int2 )
    .add-position ( 19 3 int2 )
    .add-position ( 24 4 int2 )
    .add-position ( 32 7 int2 )
    .add
}
path {
    :name ( CameraRocketeers )
    .add-position ( 40 -9 int2 )
    .add
}
path {
    :name ( Tank1 )
    .add-position ( 6 0 int2 )
    .add-position ( 15 0 int2 )
    .add-position ( 15 5 int2 )
    .add-position ( 27 5 int2 )
    .add-position ( 27 7 int2 )
    .add
}
path {
    :name ( Tank2 )
    .add-position ( 2 0 int2 )
    .add-position ( 15 0 int2 )
    .add-position ( 15 5 int2 )
    .add-position ( 26 5 int2 )
    .add-position ( 26 4 int2 )
    .add
}
path {
    :name ( Tank3 )
    .add-position ( 2 -4 int2 )
    .add-position ( 2 0 int2 )
    .add-position ( 15 0 int2 )
    .add-position ( 15 5 int2 )
    .add-position ( 26 5 int2 )
    .add-position ( 26 6 int2 )
    .add
}
path {
    :name ( Recon )
    .add-position ( 2 -2 int2 )
    .add-position ( 2 0 int2 )
    .add-position ( 15 0 int2 )
    .add-position ( 15 5 int2 )
    .add-position ( 28 5 int2 )
    .add
}
path {
    :name ( Infantry )
    .add-position ( 28 6 int2 )
    .add-position ( 31 6 int2 )
    .add
}
path {
    :name ( Infantry1 )
    .add-position ( 4 -2 int2 )
    .add-position ( 5 -2 int2 )
    .add-position ( 5 1 int2 )
    .add
}
path {
    :name ( Infantry2 )
    .add-position ( 4 -6 int2 )
    .add-position ( 4 -3 int2 )
    .add-position ( 6 -3 int2 )
    .add-position ( 6 -1 int2 )
    .add
}
path {
    :name ( Infantry3 )
    .add-position ( 0 -5 int2 )
    .add-position ( 0 1 int2 )
    .add-position ( 4 1 int2 )
    .add
}
path {
    :name ( Recon2 )
    .add-position ( 2 -9 int2 )
    .add-position ( 2 -3 int2 )
    .add-position ( 15 -3 int2 )
    .add-position ( 15 5 int2 )
    .add-position ( 27 5 int2 )
    .add-position ( 27 3 int2 )
    .add-position ( 30 3 int2 )
    .add
}
path {
    :name ( RedTank1 )
    .add-position ( 41 7 int2 )
    .add-position ( 34 7 int2 )
    .add-position ( 34 3 int2 )
    .add
}
path {
    :name ( RedTank2 )
    .add-position ( 39 5 int2 )
    .add-position ( 35 5 int2 )
    .add-position ( 35 6 int2 )
    .add
}
path {
    :name ( RedRockets1 )
    .add-position ( 41 5 int2 )
    .add-position ( 36 5 int2 )
    .add-position ( 36 6 int2 )
    .add
}
path {
    :name ( RedRockets2 )
    .add-position ( 43 5 int2 )
    .add-position ( 35 5 int2 )
    .add-position ( 35 3 int2 )
    .add
}
path {
    :name ( RedTank3 )
    .add-position ( 43 6 int2 )
    .add-position ( 38 6 int2 )
    .add-position ( 38 7 int2 )
    .add-position ( 22 7 int2 )
    .add-position ( 22 5 int2 )
    .add-position ( 12 5 int2 )
    .add
}
path {
    :name ( RedTank4 )
    .add-position ( 45 4 int2 )
    .add-position ( 30 4 int2 )
    .add-position ( 30 2 int2 )
    .add-position ( 26 2 int2 )
    .add-position ( 26 -4 int2 )
    .add
}
path {
    :name ( RedRocketeerTop )
    .add-position ( 40 -8 int2 )
    .add-position ( 39 -8 int2 )
    .add-position ( 27 5 int2 )
    .add
}
path {
    :name ( RedRocketeerBottom )
    .add-position ( 40 -10 int2 )
    .add-position ( 39 -10 int2 )
    .add-position ( 27 5 int2 )
    .add
}
path {
    :name ( RedArtillery1 )
    .add-position ( 45 8 int2 )
    .add-position ( 22 8 int2 )
    .add-position ( 22 6 int2 )
    .add-position ( 13 6 int2 )
    .add-position ( 13 -2 int2 )
    .add
}
path {
    :name ( RedArtillery )
    .add-position ( 46 10 int2 )
    .add-position ( 25 10 int2 )
    .add-position ( 25 5 int2 )
    .add-position ( 17 5 int2 )
    .add-position ( 17 -2 int2 )
    .add-position ( 11 -2 int2 )
    .add
}
path {
    :name ( RedArtillery3 )
    .add-position ( 46 3 int2 )
    .add-position ( 37 3 int2 )
    .add-position ( 37 1 int2 )
    .add-position ( 27 1 int2 )
    .add-position ( 27 -6 int2 )
    .add-position ( 9 -6 int2 )
    .add
}
path {
    :name ( RedRockets1Target )
    .add-position ( 36 6 int2 )
    .add-position ( 31 6 int2 )
    .add
}
path {
    :name ( RedRockets2Target )
    .add-position ( 35 3 int2 )
    .add-position ( 30 3 int2 )
    .add
}
path {
    :name ( RedTank1Attack )
    .add-position ( 34 3 int2 )
    .add-position ( 31 3 int2 )
    .add-position ( 30 3 int2 )
    .add
}
path {
    :name ( RedInfantry1Attack )
    .add-position ( 33 6 int2 )
    .add-position ( 32 6 int2 )
    .add-position ( 31 6 int2 )
    .add
}
path {
    :name ( CameraEnd )
    .add-position ( 14 -1 int2 )
    .add
}
